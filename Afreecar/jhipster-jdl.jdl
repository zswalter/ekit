

application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName Afreecar
    blueprints []
    buildTool maven
    cacheProvider ehcache
    clientFramework angularX
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1600878155541
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    embeddableLaunchScript false
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation true
    jhiPrefix jhi
    jhipsterVersion "6.10.3"
    jwtSecretKey "MGM4YmYxMzk5NWIwM2U0YWUwNjNhODkwNzgyYzc3N2JmM2Y5MjVhZmE0MjE2Yzc1MGRjZDgyMjZlNTc1ZGExZDlkNzA2ODMwMmEzZjRiYWM2OGJiOGYzMjU0OTMzMzgyNTgyMTcwNTkzNjExYTA0NjVkNWQyNzY2ZjQ0ZjQ4ZTQ="
    languages [en]
    messageBroker false
    nativeLanguage en
    otherModules []
    packageName com.afreecar.survey
    prodDatabaseType mysql
    searchEngine false
    serverPort 8080
    serviceDiscoveryType eureka
    skipClient true
    skipServer false
    skipUserManagement true
    testFrameworks []
    useSass true
    websocket false
  }
  entities *
}
entity Ticket{
   idTicket Integer required unique,
   idUser Integer required,
   created ZonedDateTime,
   closed ZonedDateTime,
   closeByUserID Integer,
   productID Integer
}

/*
* Product entity
*/
entity Product {
    productName String required,
    productID Integer required unique,
    productDescription String,
    productImage String
}

entity SurveyQuestion {
   idSurveyQuestion Integer required unique,
   questionText String required,
   isActive Boolean
}



entity SurveyAnswer {
     idSurveyAnswer Integer required,
     idQuestion Integer required,
     answerText String required
}

entity TicketSurveyMap {
    idTicket Integer required,
    idSurveyAnswer Integer required
}

entity User {
    idUser Integer required unique,
    firstName String,
    lastName String,
    email String unique,
    password String required
}

entity TicketComment {
    idComment Integer required unique,
    idTicket Integer required,
    idUser Integer required,
    content String required,
    created ZonedDateTime
}

enum Language {
    FRENCH, ENGLISH, SPANISH, GERMAN, JAPANESE
}

relationship OneToOne {
	Ticket{productId} to Product
}

relationship OneToOne {
	Ticket{userID required} to User
}

relationship OneToOne {
	Ticket{closedByUserID} to User
}


relationship ManyToOne {
	//Answer
    TicketSurveyMap{idSurveyAnswer} to SurveyAnswer,
    //Ticket
    TicketSurveyMap{idTicket} to Ticket,
    //Questions
    SurveyAnswer{idSurveyQuestion required} to SurveyQuestion

}
relationship ManyToOne {
	TicketComment{ticketID required} to Ticket

}




